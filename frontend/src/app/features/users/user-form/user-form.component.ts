import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from '../../../core/services/user.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from '../../../core/models/user.model';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent implements OnInit {\n  form!: FormGroup;\n  editMode = false;\n  userId?: number;\n  loading = false;\n  error?: string;\n\n  constructor(\n    private fb: FormBuilder, private userService: UserService,\n    private route: ActivatedRoute, private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(128)]],\n      email: ['', [Validators.required, Validators.email]]\n    });\n\n    this.userId = Number(this.route.snapshot.paramMap.get('id'));\n    this.editMode = Boolean(this.userId);\n\n    if (this.editMode) {\n      this.loading = true;\n      this.userService.getUser(this.userId!).subscribe({\n        next: (user) => {\n          this.form.patchValue(user);\n          this.loading = false;\n        },\n        error: () => { this.error = 'User not found'; this.loading = false; }\n      });\n    }\n  }\n\n  submit(): void {\n    if (this.form.invalid) return;\n    this.loading = true;\n    const user: User = this.form.value;\n    if (this.editMode) {\n      this.userService.updateUser(this.userId!, user).subscribe({\n        next: () => this.router.navigate(['/users']),\n        error: (err) => { this.error = err.error.error || 'Update failed'; this.loading = false; }\n      });\n    } else {\n      this.userService.addUser(user).subscribe({\n        next: () => this.router.navigate(['/users']),\n        error: (err) => { this.error = err.error.error || 'Creation failed'; this.loading = false; }\n      });\n    }\n  }\n}
