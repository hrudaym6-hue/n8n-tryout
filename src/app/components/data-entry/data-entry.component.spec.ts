import { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { DataEntryComponent } from './data-entry.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DataService } from '../../services/data.service';\nimport { of, throwError } from 'rxjs';\n\ndescribe('DataEntryComponent', () => {\n  let component: DataEntryComponent;\n  let fixture: ComponentFixture<DataEntryComponent>;\n  let dataServiceSpy: jasmine.SpyObj<DataService>;\n\n  beforeEach(async () => {\n    dataServiceSpy = jasmine.createSpyObj('DataService', ['saveEntry']);\n    await TestBed.configureTestingModule({\n      declarations: [DataEntryComponent],\n      imports: [ReactiveFormsModule],\n      providers: [\n        { provide: DataService, useValue: dataServiceSpy }\n      ]\n    }).compileComponents();\n    fixture = TestBed.createComponent(DataEntryComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create entry form', () => {\n    expect(component.entryForm).toBeTruthy();\n  });\n\n  it('should handle successful submit', () => {\n    dataServiceSpy.saveEntry.and.returnValue(of({}));\n    component.entryForm.setValue({field1: 'val', field2: 'test@example.com', field3: 1});\n    component.onSubmit();\n    expect(component.success).toBe('Entry saved successfully!');\n  });\n\n  it('should show error on failed submit', () => {\n    dataServiceSpy.saveEntry.and.returnValue(throwError(() => new Error()));\n    component.entryForm.setValue({field1: 'val', field2: 'test@example.com', field3: 1});\n    component.onSubmit();\n    expect(component.error).toBe('Failed to save entry.');\n  });\n});
